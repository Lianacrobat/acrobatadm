---
import type { Product } from "@data/products";
import { getProductById } from "@data/productUtils";
import { sendTelegramNotification } from "../../../utils/telegram.js";
---

<div id="favorites-root"></div>

<script>
	import { getProductById } from "@data/productUtils";
	import { sendTelegramNotification } from "../../../utils/telegram.js";

	function getFavorites() {
		try {
			return JSON.parse(localStorage.getItem("favorites") || "[]");
		} catch {
			return [];
		}
	}
	function saveFavorites(favs: string[]) {
		localStorage.setItem("favorites", JSON.stringify(favs));
	}
	function clearFavorites() {
		saveFavorites([]);
		window.dispatchEvent(new CustomEvent("favoritesChanged"));
	}

	function renderFavorites() {
		const root = document.getElementById("favorites-root");
		if (!root) return;
		const favIds: string[] = getFavorites();
		const products = favIds
			.map((id: string) => getProductById?.(id))
			.filter(Boolean);

		if (!products || products.length === 0) {
			root.innerHTML = `
				<div class="text-center py-16">
					<svg class="w-20 h-20 text-[var(--text-color-soft)] mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path></svg>
					<h3 class="text-xl font-semibold mb-2">No tienes productos favoritos</h3>
					<p class="mb-4 text-[var(--text-color-soft)]">Explora nuestra tienda y marca los productos que más te gusten.</p>
					<a href="/tienda" class="inline-flex items-center gap-2 px-6 py-3 rounded-lg bg-gradient-to-r from-[var(--accent-color)] to-[var(--favorite-color)] text-white font-medium hover:from-[var(--accent-color)] hover:to-[var(--favorite-color)] transition">Explorar Tienda</a>
				</div>
			`;
			return;
		}

		root.innerHTML = `
			<div class="flex justify-between items-center mb-6">
				<span class="text-sm text-[var(--text-color-soft)]">( ${products.length} favoritos )</span>
				<button id="clear-favs" class="flex items-center gap-2 px-3 py-2 text-xs text-[var(--favorite-color)] hover:text-[var(--favorite-color)] hover:bg-[var(--favorite-color)]/10 rounded-lg transition-all duration-200 font-medium border border-[var(--favorite-color)]/50 hover:border-[var(--favorite-color)]/50">Eliminar todo</button>
			</div>
			<div class="grid grid-cols-3  lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 gap-4 lg:gap-6 mb-8">
				${products
					.map(
						(product: any) => `
					<div class="bg-[var(--cajas)] rounded-lg shadow transition-shadow overflow-hidden hover:shadow-xl flex flex-col">
						<a href="/producto/${product.slug}" class="block aspect-square overflow-hidden">
							<img src="${product.images?.[0]?.src || product.images?.[0] || "https://via.placeholder.com/400x400/374151/FFFFFF?text=Sin+Imagen"}" alt="${product.name}" class="w-full h-full object-cover hover:scale-105 transition-transform duration-300" loading="lazy" />
						</a>
						<div class="p-4 flex-1 flex flex-col">
							<h3 class="font-semibold mb-2 line-clamp-2">
								<a href="/producto/${product.slug}" class="hover:text-[var(--accent-color)] transition-colors">${product.name}</a>
							</h3>
							<div class="flex items-center justify-between mt-auto">
								<button class="favorite-btn text-[var(--favorite-color)] hover:scale-110 transition-transform" data-id="${product.id}" data-name="${product.name}" title="Quitar de favoritos">❤️</button>
								<a href="/producto/${product.slug}" class="text-xs text-[var(--accent-color)] hover:text-[var(--vinculo)] transition-colors">Ver detalles →</a>
							</div>
						</div>
					</div>
				`
					)
					.join("")}
			</div>
		`;

		const clearBtn = document.getElementById(
			"clear-favs"
		) as HTMLButtonElement | null;
		if (clearBtn) {
			clearBtn.onclick = () => {
				if (confirm("¿Eliminar todos los favoritos?")) clearFavorites();
			};
		}
		root.querySelectorAll(".favorite-btn").forEach((btn) => {
			const button = btn as HTMLButtonElement;
			button.onclick = async () => {
				const id = button.dataset.id,
					name = button.dataset.name;
				const favs = getFavorites();
				const idx = favs.indexOf(id);
				if (idx > -1) favs.splice(idx, 1);
				saveFavorites(favs);
				await sendTelegramNotification(name, "removed");
				renderFavorites();
			};
		});
	}

	window.addEventListener("favoritesChanged", renderFavorites);
	document.addEventListener("DOMContentLoaded", renderFavorites);
	document.addEventListener("astro:page-load", renderFavorites);
</script>
