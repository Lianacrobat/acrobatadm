---
export interface Props {
	open?: boolean;
}

export interface NavLink {
	label: string;
	href: string;
}

export interface Category {
	name: string;
	links: NavLink[];
}

const { open = false } = Astro.props;

/* ────────  AQUÍ EDITAS TUS CATEGORÍAS Y RUTAS  ───────── */
const nav: Category[] = [
	{
		name: "Primeros pasos",
		links: [
			{ label: "Empezar", href: "/primeros-pasos" },
			{ label: "Comunidad", href: "/comunidad" },
			{ label: "Social", href: "/social" },
		],
	},
	{
		name: "Tienda",
		links: [
			{ label: "Productos", href: "/productos" },
			{ label: "Landing Page", href: "/landingpage" },
			{ label: "Favoritos", href: "/favoritos" },
		],
	},
	{
		name: "Ayuda",
		links: [
			{ label: "FAQ", href: "/faq" },
			{ label: "Soporte", href: "/soporte" },
		],
	},
];
---

<!-- overlay -->
<div
	id="kimi-overlay"
	class="fixed inset-0 z-40 bg-black/40 backdrop-blur-sm transition-opacity duration-300"
	class:list={[{ hidden: !open }]}
>
</div>

<!-- aside -->
<aside
	id="kimi-aside"
	class="fixed inset-y-0 left-0 z-50 flex w-72 -translate-x-full flex-col bg-white shadow-2xl transition-transform duration-300 ease-in-out"
	class:list={[{ "translate-x-0": open }]}
	aria-labelledby="aside-title"
>
	<!-- header -->
	<div
		class="flex items-center justify-between border-b border-slate-200 px-4 py-3"
	>
		<h2
			id="aside-title"
			class="text-lg font-semibold text-slate-800"
		>
			Menú
		</h2>
		<button
			id="kimi-close"
			class="rounded p-1 text-slate-400 hover:bg-slate-100"
			aria-label="Cerrar menú"
		>
			<svg
				class="h-6 w-6"
				fill="none"
				stroke="currentColor"
				viewBox="0 0 24 24"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="2"
					d="M6 18L18 6M6 6l12 12"
				></path>
			</svg>
		</button>
	</div>

	<!-- body -->
	<nav class="flex-1 overflow-y-auto px-4 py-4">
		{
			nav.map((cat) => (
				<section class="mb-6">
					<h3 class="mb-2 text-xs font-bold uppercase tracking-wider text-slate-400">
						{cat.name}
					</h3>
					<ul class="space-y-1">
						{cat.links.map((link) => (
							<li>
								<a
									href={link.href}
									class="block rounded px-3 py-2 text-sm text-slate-700 hover:bg-slate-100"
								>
									{link.label}
								</a>
							</li>
						))}
					</ul>
				</section>
			))
		}
	</nav>
</aside>

<!-- botón flotante que abre el aside -->
<button
	id="kimi-open"
	class="fixed bottom-6 left-6 z-30 flex h-14 w-14 items-center justify-center rounded-full bg-sky-600 text-white shadow-xl transition-transform hover:scale-110"
	aria-label="Abrir menú"
>
	<svg
		class="h-6 w-6"
		fill="none"
		stroke="currentColor"
		viewBox="0 0 24 24"
	>
		<path
			stroke-linecap="round"
			stroke-linejoin="round"
			stroke-width="2"
			d="M4 6h16M4 12h16M4 18h16"
		></path>
	</svg>
</button>

<script>
	const openBtn = document.getElementById("kimi-open") as HTMLButtonElement;
	const closeBtn = document.getElementById("kimi-close") as HTMLButtonElement;
	const aside = document.getElementById("kimi-aside") as HTMLElement;
	const overlay = document.getElementById("kimi-overlay") as HTMLElement;

	const openAside = () => {
		aside.classList.remove("-translate-x-full");
		aside.classList.add("translate-x-0");
		overlay.classList.remove("hidden");
		document.body.classList.add("overflow-hidden");
	};

	const closeAside = () => {
		aside.classList.remove("translate-x-0");
		aside.classList.add("-translate-x-full");
		overlay.classList.add("hidden");
		document.body.classList.remove("overflow-hidden");
	};

	openBtn.addEventListener("click", openAside);
	closeBtn.addEventListener("click", closeAside);
	overlay.addEventListener("click", closeAside);

	/* cerrar con ESC */
	document.addEventListener("keydown", (e) => {
		if (e.key === "Escape") closeAside();
	});
</script>
