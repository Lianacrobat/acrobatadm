---
interface Props {
	text: string;
	position:
		| "top"
		| "bottom"
		| "left"
		| "right"
		| "top-start"
		| "top-end"
		| "bottom-start"
		| "bottom-end"
		| "left-start"
		| "left-end"
		| "right-start"
		| "right-end";
	delay?: number; // ms
}

const { text, position = "top", delay = 100 } = Astro.props;

// Mejoras: 
// - Mejor manejo de clases y posiciones
// - Mejor accesibilidad (aria-label, role)
// - Mejor animaci√≥n y visibilidad
// - Permite personalizar el delay

const positionClasses = {
	top: "left-1/2 -translate-x-1/2 -top-10",
	"top-start": "left-0 -top-10",
	"top-end": "right-0 -top-10",
	bottom: "left-1/2 -translate-x-1/2 top-10",
	"bottom-start": "left-0 top-10",
	"bottom-end": "right-0 top-10",
	left: "-left-2 top-1/2 -translate-y-1/2 -translate-x-full",
	"left-start": "-left-2 top-0 -translate-x-full",
	"left-end": "-left-2 bottom-0 -translate-x-full",
	right: "-right-2 top-1/2 -translate-y-1/2 translate-x-full",
	"right-start": "-right-2 top-0 translate-x-full",
	"right-end": "-right-2 bottom-0 translate-x-full",
} as const;

type PositionKey = keyof typeof positionClasses;

function getPositionClass(pos: PositionKey) {
	return positionClasses[pos] || positionClasses.top;
}
---

<span
	role="tooltip"
	aria-label={text}
	tabindex="0"
	class:list={[
		"pointer-events-none absolute px-3 py-1.5 text-xs font-medium rounded shadow-lg bg-[var(--tooltip-bg,black)] text-[var(--tooltip-text,white)] opacity-0 scale-95 group-hover:opacity-100 group-hover:scale-100 group-focus:opacity-100 group-focus:scale-100 transition-all duration-200 whitespace-nowrap z-50",
		getPositionClass(position as PositionKey),
	]}
	style={`transition-delay: ${delay}ms;`}
>
	{text}
</span>
