---
import IconLabel from "./IconLabel.astro";
import ThemeToogle from "../theme/ThemeToogle.astro";

// Obtener la ruta actual para navegación activa
const currentPath = Astro.url.pathname;

// Generar ID único para el componente
const asideId = `aside-nav-${Math.random().toString(36).substr(2, 9)}`;

// Configuración de navegación optimizada y organizada
interface NavSection {
	title: string;
	items: NavItem[];
	gradient: string;
	priority: 'high' | 'normal' | 'low';
	ariaLabel?: string;
	description?: string;
}

interface NavItem {
	href: string;
	text: string;
	nameIcon: string;
	isActive: boolean;
	priority?: 'high' | 'normal' | 'low';
	target?: '_blank' | '_self';
	ariaLabel?: string;
	keyboardShortcut?: string;
	disabled?: boolean;
}

// Estructura de navegación mejorada y mantenible
const navigationSections: NavSection[] = [
	{
		title: "Principal",
		gradient: "bg-gradient-to-r from-sky-400 to-blue-600",
		priority: "high",
		items: [
			{
				href: "/",
				text: "Inicio",
				nameIcon: "adm",
				isActive: currentPath === "/",
				priority: "high"
			},
			{
				href: "/primeros-pasos",
				text: "Primeros pasos",
				nameIcon: "primerosPasos",
				isActive: currentPath === "/primeros-pasos",
				priority: "high"
			},
			{
				href: "/comunidad",
				text: "Comunidad",
				nameIcon: "comunidad",
				isActive: currentPath.startsWith("/comunidad"),
				priority: "normal"
			}
		]
	},
	{
		title: "Catálogo",
		gradient: "bg-gradient-to-r from-rose-400 via-fuchsia-500 to-indigo-500",
		priority: "high",
		items: [
			{
				href: "/catalogo",
				text: "Catálogo",
				nameIcon: "tienda",
				isActive: currentPath === "/catalogo" || currentPath.startsWith("/catalogo/"),
				priority: "high"
			},
			{
				href: "/tienda",
				text: "Productos",
				nameIcon: "productos",
				isActive: currentPath.startsWith("/tienda"),
				priority: "normal"
			},
			{
				href: "/favoritos",
				text: "Mis Favoritos",
				nameIcon: "favoritos",
				isActive: currentPath.startsWith("/favoritos"),
				priority: "normal"
			}
		]
	},
	{
		title: "Bienestar",
		gradient: "bg-gradient-to-r from-lime-600 to-green-600",
		priority: "normal",
		items: [
			{
				href: "/nutricion",
				text: "Nutrición",
				nameIcon: "nutricion",
				isActive: currentPath.startsWith("/nutricion"),
				priority: "normal"
			},
			{
				href: "/entrenamiento",
				text: "Entrenamiento",
				nameIcon: "entrenamiento",
				isActive: currentPath.startsWith("/entrenamiento"),
				priority: "normal"
			}
		]
	},
	{
		title: "Contenido",
		gradient: "bg-gradient-to-r from-green-300 via-blue-500 to-purple-600",
		priority: "normal",
		items: [
			{
				href: "/blog",
				text: "Variantes Acro",
				nameIcon: "variantes",
				isActive: currentPath.startsWith("/blog"),
				priority: "normal"
			},
			{
				href: "/Variantes/lista-lectura",
				text: "Lista de Lectura",
				nameIcon: "blog",
				isActive: currentPath.startsWith("/Variantes/lista-lectura"),
				priority: "low"
			}
		]
	}
];
---

<!-- Skip link para accesibilidad -->
<a href="#main-content" class="skip-link sr-only focus:not-sr-only">
	Saltar al contenido principal
</a>

<!-- Sidebar de navegación optimizado -->
<aside 
	id={asideId}
	class="flex flex-col h-screen p-2 overflow-visible bg-[var(--bg-secondary,transparent)] backdrop-blur-sm will-change-transform"
	role="navigation"
	aria-label="Navegación principal del sitio"
	aria-describedby={`${asideId}-description`}
	data-component="aside-navigation"
>
	<!-- Descripción oculta para lectores de pantalla -->
	<div id={`${asideId}-description`} class="sr-only">
		Navegación principal con {navigationSections.length} secciones. Use las teclas de flecha para navegar entre elementos.
	</div>

	<!-- Área de navegación principal -->
	<nav 
		class="flex flex-col gap-3 sm:gap-4 flex-1 overflow-y-auto overflow-x-visible custom-scrollbar smooth-scroll"
		aria-label="Menú de navegación"
		role="navigation"
		style="overflow: visible;"
	>
		<!-- Renderizado dinámico de secciones de navegación -->
		{navigationSections.map((section, sectionIndex) => (
			<section 
				class="bg-zinc-500/5 dark:bg-zinc-400/5 rounded-xl p-1 transition-all duration-200 hover:bg-zinc-500/10 dark:hover:bg-zinc-400/10 animate-fade-in-left will-change-transform"
				aria-labelledby={`nav-section-${sectionIndex}`}
				aria-describedby={section.description ? `nav-section-desc-${sectionIndex}` : undefined}
				data-priority={section.priority}
				data-section-index={sectionIndex}
				role="group"
			>
				<!-- Título de sección (solo visible en pantallas grandes) -->
				<h3 
					id={`nav-section-${sectionIndex}`}
					class="hidden lg:block text-xs font-semibold text-[var(--text-color-soft)] uppercase tracking-wider px-3 py-2 mb-1 accessible-spacing"
				>
					{section.title}
				</h3>
				
				{section.description && (
					<p id={`nav-section-desc-${sectionIndex}`} class="sr-only">
						{section.description}
					</p>
				)}
				
				<!-- Lista de elementos de navegación -->
				<ul class="space-y-1" role="list" aria-label={`Enlaces de ${section.title}`}>
					{section.items.map((item, itemIndex) => (
						<li role="listitem" data-item-index={itemIndex}>
							<IconLabel
								href={item.href}
								text={item.text}
								isActive={item.isActive}
								nameIcon={item.nameIcon}
								activeBgClass={section.gradient}
								priority={item.priority || section.priority}
								target={item.target || '_self'}
								tooltipPosition="right"
								showTooltipOnMobile={true}
								iconSize="md"
								ariaLabel={item.ariaLabel || `Ir a ${item.text}`}
								disabled={item.disabled || false}
							/>
							{item.keyboardShortcut && (
								<span class="sr-only">Atajo de teclado: {item.keyboardShortcut}</span>
							)}
						</li>
					))}
				</ul>
			</section>
		))}
	</nav>

	<!-- Footer optimizado con tema -->
	<footer 
		class="flex-shrink-0 pb-safe border-t border-zinc-200/50 dark:border-zinc-700/50 mt-4 accessible-padding"
		role="contentinfo"
		aria-label="Configuración y información de la aplicación"
	>
		<div class="w-full justify-center items-center flex p-2.5 sm:p-3">
			<div class="transition-all duration-200 hover:scale-105 will-change-transform">
				<ThemeToogle />
			</div>
		</div>
		
		<!-- Información adicional (solo en pantallas grandes) -->
		<div class="hidden lg:block text-center pb-2">
			<p class="text-xs text-[var(--text-color-soft)] opacity-75" role="status" aria-live="polite">
				Adm App v1.0
			</p>
		</div>
	</footer>
</aside>

<!-- Incluir estilos de accesibilidad -->
<style>
	@import url('/src/styles/accessibility.css');
</style>

<!-- Script de accesibilidad -->
<script>
	// Declaración de tipos para TypeScript
	declare global {
		interface Window {
			accessibilityManagerInitialized?: boolean;
		}
	}

	// Declaración del módulo para evitar errores de TypeScript
	declare module '/src/scripts/accessibility.js' {
		const AccessibilityManager: any;
		export default AccessibilityManager;
	}

	// Importar y inicializar el manager de accesibilidad
	import('/src/scripts/accessibility.js').then(module => {
		if (typeof window !== 'undefined' && !window.accessibilityManagerInitialized) {
			window.accessibilityManagerInitialized = true;
		}
	}).catch(error => {
		console.warn('No se pudo cargar el script de accesibilidad:', error);
	});

	// Atajos de teclado específicos para navegación
	document.addEventListener('keydown', (e) => {
		if (e.altKey) {
			switch (e.key.toLowerCase()) {
				case 'h':
					e.preventDefault();
					window.location.href = '/';
					break;
				case 'b':
					e.preventDefault();
					window.location.href = '/blog';
					break;
				case 'c':
					e.preventDefault();
					window.location.href = '/config';
					break;
				case 'd':
					e.preventDefault();
					window.open('https://docs.example.com', '_blank');
					break;
			}
		}
	});

	// Mejorar la experiencia de navegación con teclado
	const sidebar = document.querySelector('[data-component="aside-navigation"]');
	if (sidebar) {
		// Añadir indicadores de focus mejorados
		const links = sidebar.querySelectorAll('a');
		links.forEach((link, index) => {
			link.addEventListener('focus', () => {
				link.setAttribute('data-focus-index', index.toString());
			});
			
			link.addEventListener('blur', () => {
				link.removeAttribute('data-focus-index');
			});
		});
	}


</script>
