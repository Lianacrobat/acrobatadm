---
import Layout from "../../layouts/Layout.astro";
import ProducDetails from "../../components/tienda/details/DetallesFather.astro";
import { getProductBySlug, getAllProducts } from "../../data/productUtils";
import type { Product } from "../../data/products";

// Genera todas las rutas de productos para build estÃ¡tico
export async function getStaticPaths() {
	const products = getAllProducts();
	return products.map((product) => ({
		params: { slug: product.slug },
	}));
}

// Get the slug from params
const { slug } = Astro.params;
const product: Product | undefined = slug ? getProductBySlug(slug) : undefined;

if (!product) {
	return Astro.redirect("/404");
}
---

<Layout 
	title={`${product.name} - Acrobata de Mente`}
	description={product.shortDescription}
	og={{
		title: product.name,
		description: product.shortDescription,
		image: product.images[0] as string,
		url: Astro.url.href,
		type: "product",
		site_name: "Acrobata de Mente"
	}}
	twitter={{
		card: "summary_large_image",
		title: product.name,
		description: product.shortDescription,
		image: product.images[0] as string
	}}
	structuredData={{
		"@context": "https://schema.org",
		"@type": "Product",
		"name": product.name,
		"description": product.shortDescription,
		"image": product.images[0],
		"brand": {
			"@type": "Brand",
			"name": "Acrobata de Mente"
		},
		"category": product.category,
		"offers": {
			"@type": "Offer",
			"availability": "https://schema.org/InStock",
			"itemCondition": product.condition === "nuevo" ? "https://schema.org/NewCondition" : "https://schema.org/UsedCondition"
		}
	}}
>
	<ProducDetails product={product} />
</Layout>
