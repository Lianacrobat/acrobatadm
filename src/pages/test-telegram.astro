---
// P√°gina de prueba para verificar la funcionalidad de Telegram
---

<html lang="es">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <title>Test Telegram - AdmApp</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background: #f5f5f5;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        button {
            background: #007bff;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 6px;
            cursor: pointer;
            margin: 10px 5px;
            font-size: 16px;
        }
        button:hover {
            background: #0056b3;
        }
        button:disabled {
            background: #ccc;
            cursor: not-allowed;
        }
        .result {
            margin-top: 20px;
            padding: 15px;
            border-radius: 6px;
            white-space: pre-wrap;
        }
        .success {
            background: #d4edda;
            border: 1px solid #c3e6cb;
            color: #155724;
        }
        .error {
            background: #f8d7da;
            border: 1px solid #f5c6cb;
            color: #721c24;
        }
        .info {
            background: #d1ecf1;
            border: 1px solid #bee5eb;
            color: #0c5460;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üß™ Test de Telegram</h1>
        <p>Usa estos botones para probar la funcionalidad de Telegram:</p>
        
        <div>
            <button id="testConnection">üîó Probar Conexi√≥n</button>
            <button id="testNotification">üì± Enviar Notificaci√≥n de Prueba</button>
            <button id="testFavorite">‚ù§Ô∏è Simular Favorito</button>
        </div>
        
        <div id="result" class="result" style="display: none;"></div>
    </div>

    <script>
        const resultDiv = document.getElementById('result');
        
        function showResult(message, type = 'info') {
            resultDiv.textContent = message;
            resultDiv.className = `result ${type}`;
            resultDiv.style.display = 'block';
        }
        
        function showLoading(message) {
            showResult(`‚è≥ ${message}...`, 'info');
        }
        
        // Test de conexi√≥n
        document.getElementById('testConnection').addEventListener('click', async () => {
            showLoading('Probando conexi√≥n con Telegram');
            
            try {
                const response = await fetch('/api/telegram', {
                    method: 'GET'
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showResult(`‚úÖ Conexi√≥n exitosa!\n\nBot: ${result.bot.first_name}\nUsername: @${result.bot.username}\nID: ${result.bot.id}`, 'success');
                } else {
                    showResult(`‚ùå Error de conexi√≥n:\n${result.error}`, 'error');
                }
            } catch (error) {
                showResult(`‚ùå Error de red:\n${error.message}`, 'error');
            }
        });
        
        // Test de notificaci√≥n
        document.getElementById('testNotification').addEventListener('click', async () => {
            showLoading('Enviando notificaci√≥n de prueba');
            
            try {
                const response = await fetch('/api/telegram', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        productName: 'Producto de Prueba',
                        action: 'added'
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showResult('‚úÖ Notificaci√≥n enviada exitosamente!\nRevisa tu chat de Telegram.', 'success');
                } else {
                    showResult(`‚ùå Error enviando notificaci√≥n:\n${result.error}`, 'error');
                }
            } catch (error) {
                showResult(`‚ùå Error de red:\n${error.message}`, 'error');
            }
        });
        
        // Simular favorito
        document.getElementById('testFavorite').addEventListener('click', async () => {
            showLoading('Simulando acci√≥n de favorito');
            
            try {
                const response = await fetch('/api/telegram', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        productName: 'Camiseta Deportiva Premium',
                        action: 'added'
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showResult('‚úÖ Simulaci√≥n de favorito exitosa!\nNotificaci√≥n enviada a Telegram.', 'success');
                } else {
                    showResult(`‚ùå Error en simulaci√≥n:\n${result.error}`, 'error');
                }
            } catch (error) {
                showResult(`‚ùå Error de red:\n${error.message}`, 'error');
            }
        });
    </script>
</body>
</html>