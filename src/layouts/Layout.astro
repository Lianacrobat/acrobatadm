---
import '../styles/global.css';
import Aside from '../components/aside/Aside.astro';

export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="description" content="Astro description" />
		<meta name="generator" content={Astro.generator} />
		
		<!-- Resource hints for better performance -->
		<link rel="preconnect" href="https://cdn.jsdelivr.net" crossorigin />
		<link rel="dns-prefetch" href="https://cdn.jsdelivr.net" />
		
		<!-- Critical resources -->
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>{title}</title>
		
		<!-- Inline script to prevent theme flickering -->
		<script is:inline>
			// Initialize theme immediately to prevent flickering
			function initTheme() {
				const theme = localStorage.getItem('theme') || 
							  document.cookie.split('; ').find(row => row.startsWith('theme='))?.split('=')[1] ||
							  (window.matchMedia('(prefers-color-scheme: light)').matches ? 'light' : 'dark');
				
				document.documentElement.setAttribute('data-theme', theme);
				window.__INITIAL_THEME__ = theme;
			}
			initTheme();
		</script>
		
		<!-- Swiper CSS - loaded conditionally -->
		<link rel="preload" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'" />
		<noscript><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" /></noscript>

		<!-- Swiper JS - loaded asynchronously -->
		<script async src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
		
		<!-- Optimized SVG sprite loading -->
		<script is:inline>
			// Optimized SVG sprite loader with error handling and caching
			(function() {
				let spriteLoaded = false;
				
				function loadSVGSprite() {
					if (spriteLoaded) return Promise.resolve();
					
					return fetch('/assets/icons/sprite.svg', {
						cache: 'force-cache',
						priority: 'high'
					})
					.then(response => {
						if (!response.ok) throw new Error(`HTTP ${response.status}`);
						return response.text();
					})
					.then(svgText => {
						const container = document.createElement('div');
						container.innerHTML = svgText;
						container.style.cssText = 'position:absolute;width:0;height:0;overflow:hidden;';
						container.setAttribute('aria-hidden', 'true');
						document.body.insertBefore(container, document.body.firstChild);
						spriteLoaded = true;
					})
					.catch(error => {
						console.warn('SVG sprite loading failed:', error);
						// Fallback: create empty sprite container to prevent errors
						const fallback = document.createElement('div');
						fallback.innerHTML = '<svg style="display:none"><defs></defs></svg>';
						document.body.appendChild(fallback);
					});
				}
				
				// Load immediately if DOM is ready, otherwise wait
				if (document.readyState !== 'loading') {
					loadSVGSprite();
				} else {
					document.addEventListener('DOMContentLoaded', loadSVGSprite, { once: true });
				}
				
				// Expose loader for dynamic imports
				window.__loadSVGSprite = loadSVGSprite;
			})();
		</script>
	</head>

	<body class="h-dvh flex tracking-tight">
		<!-- Sidebar -->
		<aside class="w-16 sm:w-48 flex-shrink-0 flex flex-col">
			<Aside />
		</aside>

		<!-- Main Content -->
		<main class="flex-1 overflow-y-auto custom-scrollbar">
			<div class="max-w-7xl mx-auto px-2">
				<slot />
			</div>
		</main>
	</body>
</html>
